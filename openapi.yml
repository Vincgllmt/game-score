openapi: 3.1.0
info:
  title: API Game-score
  description: apagnan
  version: 0.0.1

servers:
- url: http://localhost:7777
  description: Serveur de développement

tags:
  - name: hello
    description: Première API avec Express
      
paths:
  /api/hello/world:
    get:
      tags:
        - hello
      description: Message de bienvenue
      responses:
        200:
          description: Retourne un message de bienvenue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hello'
  /api/hello/square/{number}:
    get:
      tags:
        - hello
      description: Calcule tah les carrés
      parameters:
        - name: number
          in: path
          description: Le nombre dont on veut calculer le carré
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retourne un carré spécifié dans l'url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Square'
  /api/hello:
    get:
      tags:
        - hello
      description: utilise la base de données
      responses:
        200:
          description: Retourne la liste des hello world
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hello'
    post:
      tags:
        - hello
      description: Ajoute un nouveau hello
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hello'
      responses:
        201:
          description: Hello ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hello'
  /api/hello/{id}:
    get:
      tags:
        - hello
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      description: Retourne un hello spécifique
      responses:
        200:
          description: Retourne un hello spécifique
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hello'
    delete:
      tags:
        - hello
      description: Supprime un hello spécifique
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Hello supprimé avec succès
  /api/player:
    get:
      tags:
        - player
      description: Retourne la liste des joueurs
      parameters:
        - name: lastName
          in: query
          description: Le nom du joueur
          required: false
          schema:
            type: string
        - name: tour
          in: query
          description: Le tour du joueur
          required: false
          schema:
            type: integer
        - name: country
          in: query
          description: Le pays du joueur
          required: false
          schema:
            type: string
      responses:
        200:
          description: Retourne la liste des joueurs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    post:
      tags:
        - player
      description: Ajoute un nouveau joueur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        201:
          description: Joueur ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
  /api/player/{id}:
    get:
      tags:
        - player
      description: Retourne un joueur spécifique
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Retourne un joueur spécifique
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    delete:
      tags:
        - player
      description: Supprime un joueur spécifique
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Joueur supprimé avec succès
  /api/game:
    get:
      tags:
        - game
      description: Retourne la liste des matchs
      parameters:
       - name: tour
         in: query
         description: Le tour du joueur
         required: false
         schema:
           type: string
           enum:
            - ATP
            - WTA
       - name: lastName
         in: query
         description: Le nom d'un des joueurs
         required: false
         schema:
           type: string
       - name: state
         in: query
         description: Le statut du match
         required: false
         schema:
           type: string
      responses:
        200:
          description: Retourne la liste des matchs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /api/game/{id}:
    get:
      tags:
        - game
      description: Retourne un match spécifique
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Retourne un match spécifique
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  
components:
  schemas:
    Hello:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
      required:
        - message
    Square:
      type: object
      properties:
        result:
          type: integer
        error:
          type: string
      additionalProperties: false
      required:
        - result
    Player:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        country:
          type: string
        tour:
          type: string
          enum:
          - ATP
          - WTA      
      additionalProperties: false
      required:
        - firstName
        - lastName
        - country
        - tour
    Game:
      type: object
      properties:
        players:
          type: object
          properties:
            player1:
              $ref: '#/components/schemas/Player'
            player2:
              $ref: '#/components/schemas/Player'
            
        
      additionalProperties: false
      required:
        - player1
        - player2
        - score